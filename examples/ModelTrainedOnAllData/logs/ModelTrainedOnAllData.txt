2018-03-16 15:14:51.806070 >> =============================== logger created =======================================
2018-03-16 15:14:51.806128 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-03-16 15:14:51.806155 >> CONFIG: The configuration file for the session was loaded from: /data/deepmedic/examples/configFiles/configAllData/model/modelConfig.cfg
2018-03-16 15:14:51.807722 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-03-16 15:14:51.807755 >> =============================================================
2018-03-16 15:14:51.807779 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-03-16 15:14:51.807801 >> =============================================================
2018-03-16 15:14:51.807821 >> CNN model's name = ModelTrainedOnAllData
2018-03-16 15:14:51.807842 >> Main output folder = /data/deepmedic/examples/ModelTrainedOnAllData
2018-03-16 15:14:51.807862 >> Path and filename to save model = /data/deepmedic/examples/ModelTrainedOnAllData/cnnModels/ModelTrainedOnAllData
2018-03-16 15:14:51.807882 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-03-16 15:14:51.807904 >> Number of Classes (including background) = 2
2018-03-16 15:14:51.807923 >> ~~Normal Pathway~~
2018-03-16 15:14:51.807944 >> Number of Input Channels = 1
2018-03-16 15:14:51.807964 >> Number of Layers = 8
2018-03-16 15:14:51.807989 >> Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
2018-03-16 15:14:51.808015 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-03-16 15:14:51.808039 >> Receptive Field = [17, 17, 17]
2018-03-16 15:14:51.808060 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-03-16 15:14:51.808082 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-03-16 15:14:51.808101 >> Lower Rank layers will be made of rank = []
2018-03-16 15:14:51.808117 >> ~~Subsampled Pathway~~
2018-03-16 15:14:51.808134 >> Use subsampled Pathway = True
2018-03-16 15:14:51.808151 >> Number of subsampled pathways that will be built = 1
2018-03-16 15:14:51.808173 >> Number of Layers (per sub-pathway) = [8]
2018-03-16 15:14:51.808195 >> Number of Feature Maps per layer (per sub-pathway) = [[30, 30, 40, 40, 40, 40, 50, 50]]
2018-03-16 15:14:51.808221 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-03-16 15:14:51.808241 >> Receptive Field = [17, 17, 17]
2018-03-16 15:14:51.808265 >> Subsampling Factor per dimension (per sub-pathway) = [[3, 3, 3]]
2018-03-16 15:14:51.808287 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-03-16 15:14:51.808305 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-03-16 15:14:51.808322 >> Lower Rank layers will be made of rank = []
2018-03-16 15:14:51.808338 >> ~~Fully Connected Pathway~~
2018-03-16 15:14:51.808354 >> Number of additional FC layers (Excluding the Classif. Layer) = 2
2018-03-16 15:14:51.808373 >> Number of Feature Maps in the additional FC layers = [150, 150]
2018-03-16 15:14:51.808390 >> Residual connections added at the output of layers (indices from 0) = [1]
2018-03-16 15:14:51.808407 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-03-16 15:14:51.808426 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
2018-03-16 15:14:51.808443 >> ~~Size Of Image Segments~~
2018-03-16 15:14:51.808460 >> Size of Segments for Training = [25, 25, 25]
2018-03-16 15:14:51.808477 >> Size of Segments for Validation = [17, 17, 17]
2018-03-16 15:14:51.808497 >> Size of Segments for Testing = [45, 45, 45]
2018-03-16 15:14:51.808514 >> ~~Batch Sizes~~
2018-03-16 15:14:51.808532 >> Batch Size for Training = 10
2018-03-16 15:14:51.808548 >> Batch Size for Validation = 48
2018-03-16 15:14:51.808564 >> Batch Size for Testing = 10
2018-03-16 15:14:51.808585 >> ~~Dropout Rates~~
2018-03-16 15:14:51.808610 >> Drop.R. for each layer in Normal Pathway = []
2018-03-16 15:14:51.808631 >> Drop.R. for each layer in Subsampled Pathway = []
2018-03-16 15:14:51.808658 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
2018-03-16 15:14:51.808678 >> ~~Weight Initialization~~
2018-03-16 15:14:51.808700 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-03-16 15:14:51.808721 >> ~~Activation Function~~
2018-03-16 15:14:51.808741 >> Activation function to use = prelu
2018-03-16 15:14:51.808760 >> ~~Batch Normalization~~
2018-03-16 15:14:51.808781 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-03-16 15:14:51.808800 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-03-16 15:14:51.808819 >> ========== Done with printing session's parameters ==========
2018-03-16 15:14:51.808838 >> =============================================================
2018-03-16 15:14:51.808864 >> 
=========== Creating the CNN model ===============
2018-03-16 15:14:51.809301 >> ...Building the CNN model...
2018-03-16 15:14:51.809484 >> [Pathway_NORMAL] is being built...
2018-03-16 15:14:51.809523 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-03-16 15:14:51.809548 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-03-16 15:14:51.809572 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-03-16 15:14:51.814892 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-03-16 15:14:51.814926 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 23, 23, 23], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 43, 43, 43]
2018-03-16 15:14:51.841098 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-03-16 15:14:51.841132 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 21, 21, 21], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 41, 41, 41]
2018-03-16 15:14:51.866713 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-03-16 15:14:51.866746 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 19, 19, 19], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 39, 39, 39]
2018-03-16 15:14:51.892138 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-03-16 15:14:51.904695 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-03-16 15:14:51.904731 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 17, 17, 17], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 37, 37, 37]
2018-03-16 15:14:51.929873 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-03-16 15:14:51.929909 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 15, 15, 15], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 35, 35, 35]
2018-03-16 15:14:51.955880 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-03-16 15:14:51.967934 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-03-16 15:14:51.967969 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 33, 33, 33]
2018-03-16 15:14:52.022959 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-03-16 15:14:52.023005 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 11, 11, 11], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 31, 31, 31]
2018-03-16 15:14:52.049438 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-03-16 15:14:52.061872 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 50, 9, 9, 9], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 29, 29, 29]
2018-03-16 15:14:52.061902 >> [Pathway_NORMAL] done.
2018-03-16 15:14:52.061979 >> [Pathway_SUBSAMPLED[3, 3, 3]] is being built...
2018-03-16 15:14:52.062011 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-03-16 15:14:52.062033 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-03-16 15:14:52.062062 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-03-16 15:14:52.065458 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-03-16 15:14:52.065493 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 17, 17, 17], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 24, 24, 24]
2018-03-16 15:14:52.090294 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-03-16 15:14:52.090328 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 15, 15, 15], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 22, 22, 22]
2018-03-16 15:14:52.115976 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-03-16 15:14:52.116011 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 20, 20, 20]
2018-03-16 15:14:52.141534 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-03-16 15:14:52.153894 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-03-16 15:14:52.153929 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 11, 11, 11], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 18, 18, 18]
2018-03-16 15:14:52.179277 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-03-16 15:14:52.179311 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 9, 9, 9], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 16, 16, 16]
2018-03-16 15:14:52.204894 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-03-16 15:14:52.216785 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-03-16 15:14:52.216819 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 7, 7, 7], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 14, 14, 14]
2018-03-16 15:14:52.242972 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-03-16 15:14:52.243006 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 5, 5, 5], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 12, 12, 12]
2018-03-16 15:14:52.269192 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-03-16 15:14:52.281002 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Output's Shape: (Train) [10, 50, 3, 3, 3], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 10, 10, 10]
2018-03-16 15:14:52.281034 >> [Pathway_SUBSAMPLED[3, 3, 3]] done.
2018-03-16 15:14:52.309789 >> DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
2018-03-16 15:14:52.309820 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
2018-03-16 15:14:52.318674 >> [Pathway_FC] is being built...
2018-03-16 15:14:52.318731 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-03-16 15:14:52.318757 >> 	[Conv.Layer_0], Filter Shape: [150, 100, 3, 3, 3]
2018-03-16 15:14:52.318782 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-03-16 15:14:52.358505 >> 	[Conv.Layer_1], Filter Shape: [150, 150, 1, 1, 1]
2018-03-16 15:14:52.358559 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-03-16 15:14:52.386797 >> 	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
2018-03-16 15:14:52.398610 >> 	[Conv.Layer_2], Filter Shape: [2, 150, 1, 1, 1]
2018-03-16 15:14:52.398660 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-03-16 15:14:52.424764 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 2, 9, 9, 9], (Val) [48, 2, 1, 1, 1], (Test) [10, 2, 29, 29, 29]
2018-03-16 15:14:52.424795 >> [Pathway_FC] done.
2018-03-16 15:14:52.424816 >> Adding the final Softmax Target layer...
2018-03-16 15:14:52.431626 >> Finished building the CNN's model.
2018-03-16 15:14:52.431661 >> 
=========== Saving the model ===============
2018-03-16 15:14:52.431715 >> Saving network to: /data/deepmedic/examples/ModelTrainedOnAllData/cnnModels/ModelTrainedOnAllData.initial.2018-03-16.15.14.52.431676.save
2018-03-16 15:14:52.993212 >> Model saved.
2018-03-16 15:14:52.993273 >> =========== Creation of the model: "ModelTrainedOnAllData" finished =================
