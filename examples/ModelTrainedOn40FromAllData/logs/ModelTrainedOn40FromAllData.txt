2018-03-18 01:47:31.848379 >> =============================== logger created =======================================
2018-03-18 01:47:31.848443 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-03-18 01:47:31.848470 >> CONFIG: The configuration file for the session was loaded from: /data/deepmedic/examples/configFiles/config40AllData/model/modelConfig.cfg
2018-03-18 01:47:31.848591 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-03-18 01:47:31.848622 >> =============================================================
2018-03-18 01:47:31.848644 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-03-18 01:47:31.848663 >> =============================================================
2018-03-18 01:47:31.848694 >> CNN model's name = ModelTrainedOn40FromAllData
2018-03-18 01:47:31.848722 >> Main output folder = /data/deepmedic/examples/ModelTrainedOn40FromAllData
2018-03-18 01:47:31.848744 >> Path and filename to save model = /data/deepmedic/examples/ModelTrainedOn40FromAllData/cnnModels/ModelTrainedOn40FromAllData
2018-03-18 01:47:31.848765 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-03-18 01:47:31.848794 >> Number of Classes (including background) = 2
2018-03-18 01:47:31.848815 >> ~~Normal Pathway~~
2018-03-18 01:47:31.848836 >> Number of Input Channels = 1
2018-03-18 01:47:31.848868 >> Number of Layers = 8
2018-03-18 01:47:31.848896 >> Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
2018-03-18 01:47:31.848927 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-03-18 01:47:31.848950 >> Receptive Field = [17, 17, 17]
2018-03-18 01:47:31.848971 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-03-18 01:47:31.849000 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-03-18 01:47:31.849026 >> Lower Rank layers will be made of rank = []
2018-03-18 01:47:31.849046 >> ~~Subsampled Pathway~~
2018-03-18 01:47:31.849069 >> Use subsampled Pathway = True
2018-03-18 01:47:31.849099 >> Number of subsampled pathways that will be built = 1
2018-03-18 01:47:31.849122 >> Number of Layers (per sub-pathway) = [8]
2018-03-18 01:47:31.849145 >> Number of Feature Maps per layer (per sub-pathway) = [[30, 30, 40, 40, 40, 40, 50, 50]]
2018-03-18 01:47:31.849182 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-03-18 01:47:31.849206 >> Receptive Field = [17, 17, 17]
2018-03-18 01:47:31.849233 >> Subsampling Factor per dimension (per sub-pathway) = [[3, 3, 3]]
2018-03-18 01:47:31.849260 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-03-18 01:47:31.849280 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-03-18 01:47:31.849300 >> Lower Rank layers will be made of rank = []
2018-03-18 01:47:31.849319 >> ~~Fully Connected Pathway~~
2018-03-18 01:47:31.849342 >> Number of additional FC layers (Excluding the Classif. Layer) = 2
2018-03-18 01:47:31.849371 >> Number of Feature Maps in the additional FC layers = [150, 150]
2018-03-18 01:47:31.849394 >> Residual connections added at the output of layers (indices from 0) = [1]
2018-03-18 01:47:31.849414 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-03-18 01:47:31.849444 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
2018-03-18 01:47:31.849465 >> ~~Size Of Image Segments~~
2018-03-18 01:47:31.849486 >> Size of Segments for Training = [25, 25, 25]
2018-03-18 01:47:31.849517 >> Size of Segments for Validation = [17, 17, 17]
2018-03-18 01:47:31.849543 >> Size of Segments for Testing = [45, 45, 45]
2018-03-18 01:47:31.849562 >> ~~Batch Sizes~~
2018-03-18 01:47:31.849585 >> Batch Size for Training = 10
2018-03-18 01:47:31.849605 >> Batch Size for Validation = 48
2018-03-18 01:47:31.849625 >> Batch Size for Testing = 10
2018-03-18 01:47:31.849654 >> ~~Dropout Rates~~
2018-03-18 01:47:31.849683 >> Drop.R. for each layer in Normal Pathway = []
2018-03-18 01:47:31.849704 >> Drop.R. for each layer in Subsampled Pathway = []
2018-03-18 01:47:31.849735 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
2018-03-18 01:47:31.849756 >> ~~Weight Initialization~~
2018-03-18 01:47:31.849781 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-03-18 01:47:31.849810 >> ~~Activation Function~~
2018-03-18 01:47:31.849831 >> Activation function to use = prelu
2018-03-18 01:47:31.849851 >> ~~Batch Normalization~~
2018-03-18 01:47:31.849881 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-03-18 01:47:31.849906 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-03-18 01:47:31.849929 >> ========== Done with printing session's parameters ==========
2018-03-18 01:47:31.849949 >> =============================================================
2018-03-18 01:47:31.849972 >> 
=========== Creating the CNN model ===============
2018-03-18 01:47:31.850408 >> ...Building the CNN model...
2018-03-18 01:47:31.850716 >> [Pathway_NORMAL] is being built...
2018-03-18 01:47:31.850762 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-03-18 01:47:31.850792 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-03-18 01:47:31.850827 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-03-18 01:47:31.856238 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-03-18 01:47:31.856279 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 23, 23, 23], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 43, 43, 43]
2018-03-18 01:47:31.883705 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-03-18 01:47:31.883743 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 21, 21, 21], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 41, 41, 41]
2018-03-18 01:47:31.909239 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-03-18 01:47:31.909275 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 19, 19, 19], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 39, 39, 39]
2018-03-18 01:47:31.934842 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-03-18 01:47:31.946845 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-03-18 01:47:31.946897 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 17, 17, 17], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 37, 37, 37]
2018-03-18 01:47:31.971936 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-03-18 01:47:31.971986 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 15, 15, 15], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 35, 35, 35]
2018-03-18 01:47:31.996230 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-03-18 01:47:32.007960 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-03-18 01:47:32.008012 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 33, 33, 33]
2018-03-18 01:47:32.032969 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-03-18 01:47:32.033005 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 11, 11, 11], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 31, 31, 31]
2018-03-18 01:47:32.059138 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-03-18 01:47:32.070755 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 50, 9, 9, 9], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 29, 29, 29]
2018-03-18 01:47:32.070787 >> [Pathway_NORMAL] done.
2018-03-18 01:47:32.070866 >> [Pathway_SUBSAMPLED[3, 3, 3]] is being built...
2018-03-18 01:47:32.070901 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-03-18 01:47:32.070927 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-03-18 01:47:32.070957 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-03-18 01:47:32.074492 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-03-18 01:47:32.074528 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 17, 17, 17], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 24, 24, 24]
2018-03-18 01:47:32.100124 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-03-18 01:47:32.100162 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 15, 15, 15], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 22, 22, 22]
2018-03-18 01:47:32.125007 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-03-18 01:47:32.125043 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 20, 20, 20]
2018-03-18 01:47:32.150792 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-03-18 01:47:32.162457 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-03-18 01:47:32.162509 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 11, 11, 11], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 18, 18, 18]
2018-03-18 01:47:32.187088 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-03-18 01:47:32.187137 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 9, 9, 9], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 16, 16, 16]
2018-03-18 01:47:32.212423 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-03-18 01:47:32.224293 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-03-18 01:47:32.224329 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 7, 7, 7], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 14, 14, 14]
2018-03-18 01:47:32.250159 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-03-18 01:47:32.250195 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 5, 5, 5], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 12, 12, 12]
2018-03-18 01:47:32.276296 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-03-18 01:47:32.336875 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Output's Shape: (Train) [10, 50, 3, 3, 3], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 10, 10, 10]
2018-03-18 01:47:32.336924 >> [Pathway_SUBSAMPLED[3, 3, 3]] done.
2018-03-18 01:47:32.364443 >> DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
2018-03-18 01:47:32.364491 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
2018-03-18 01:47:32.373578 >> [Pathway_FC] is being built...
2018-03-18 01:47:32.373624 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-03-18 01:47:32.373652 >> 	[Conv.Layer_0], Filter Shape: [150, 100, 3, 3, 3]
2018-03-18 01:47:32.373677 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-03-18 01:47:32.411540 >> 	[Conv.Layer_1], Filter Shape: [150, 150, 1, 1, 1]
2018-03-18 01:47:32.411579 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-03-18 01:47:32.439035 >> 	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
2018-03-18 01:47:32.450730 >> 	[Conv.Layer_2], Filter Shape: [2, 150, 1, 1, 1]
2018-03-18 01:47:32.450767 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-03-18 01:47:32.476869 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 2, 9, 9, 9], (Val) [48, 2, 1, 1, 1], (Test) [10, 2, 29, 29, 29]
2018-03-18 01:47:32.476902 >> [Pathway_FC] done.
2018-03-18 01:47:32.476926 >> Adding the final Softmax Target layer...
2018-03-18 01:47:32.483202 >> Finished building the CNN's model.
2018-03-18 01:47:32.483240 >> 
=========== Saving the model ===============
2018-03-18 01:47:32.483292 >> Saving network to: /data/deepmedic/examples/ModelTrainedOn40FromAllData/cnnModels/ModelTrainedOn40FromAllData.initial.2018-03-18.01.47.32.483257.save
2018-03-18 01:47:33.048496 >> Model saved.
2018-03-18 01:47:33.048541 >> =========== Creation of the model: "ModelTrainedOn40FromAllData" finished =================
