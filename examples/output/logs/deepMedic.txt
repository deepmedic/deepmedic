2018-02-20 11:40:36.214902 >> =============================== logger created =======================================
2018-02-20 11:40:36.215031 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-02-20 11:40:36.215094 >> CONFIG: The configuration file for the session was loaded from: /data/deepmedic/examples/configFiles/configSkullStripping/model/modelConfig.cfg
2018-02-20 11:40:36.215358 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-02-20 11:40:36.215426 >> =============================================================
2018-02-20 11:40:36.215467 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-02-20 11:40:36.215499 >> =============================================================
2018-02-20 11:40:36.215553 >> CNN model's name = deepMedic
2018-02-20 11:40:36.215593 >> Main output folder = /data/deepmedic/examples/output
2018-02-20 11:40:36.215627 >> Path and filename to save model = /data/deepmedic/examples/output/cnnModels/deepMedic
2018-02-20 11:40:36.215668 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-02-20 11:40:36.215720 >> Number of Classes (including background) = 2
2018-02-20 11:40:36.215753 >> ~~Normal Pathway~~
2018-02-20 11:40:36.215794 >> Number of Input Channels = 1
2018-02-20 11:40:36.215845 >> Number of Layers = 8
2018-02-20 11:40:36.215891 >> Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
2018-02-20 11:40:36.215956 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-02-20 11:40:36.215999 >> Receptive Field = [17, 17, 17]
2018-02-20 11:40:36.216039 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-02-20 11:40:36.216095 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-20 11:40:36.216133 >> Lower Rank layers will be made of rank = []
2018-02-20 11:40:36.216165 >> ~~Subsampled Pathway~~
2018-02-20 11:40:36.216221 >> Use subsampled Pathway = True
2018-02-20 11:40:36.216274 >> Number of subsampled pathways that will be built = 1
2018-02-20 11:40:36.216315 >> Number of Layers (per sub-pathway) = [8]
2018-02-20 11:40:36.216361 >> Number of Feature Maps per layer (per sub-pathway) = [[30, 30, 40, 40, 40, 40, 50, 50]]
2018-02-20 11:40:36.216448 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-02-20 11:40:36.216491 >> Receptive Field = [17, 17, 17]
2018-02-20 11:40:36.216548 >> Subsampling Factor per dimension (per sub-pathway) = [[3, 3, 3]]
2018-02-20 11:40:36.216588 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-02-20 11:40:36.216631 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-20 11:40:36.216680 >> Lower Rank layers will be made of rank = []
2018-02-20 11:40:36.216714 >> ~~Fully Connected Pathway~~
2018-02-20 11:40:36.216750 >> Number of additional FC layers (Excluding the Classif. Layer) = 2
2018-02-20 11:40:36.216802 >> Number of Feature Maps in the additional FC layers = [150, 150]
2018-02-20 11:40:36.216840 >> Residual connections added at the output of layers (indices from 0) = [1]
2018-02-20 11:40:36.216887 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-20 11:40:36.216932 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
2018-02-20 11:40:36.216965 >> ~~Size Of Image Segments~~
2018-02-20 11:40:36.217010 >> Size of Segments for Training = [25, 25, 25]
2018-02-20 11:40:36.217056 >> Size of Segments for Validation = [17, 17, 17]
2018-02-20 11:40:36.217091 >> Size of Segments for Testing = [45, 45, 45]
2018-02-20 11:40:36.217131 >> ~~Batch Sizes~~
2018-02-20 11:40:36.217176 >> Batch Size for Training = 10
2018-02-20 11:40:36.217211 >> Batch Size for Validation = 48
2018-02-20 11:40:36.217251 >> Batch Size for Testing = 10
2018-02-20 11:40:36.217296 >> ~~Dropout Rates~~
2018-02-20 11:40:36.217331 >> Drop.R. for each layer in Normal Pathway = []
2018-02-20 11:40:36.217389 >> Drop.R. for each layer in Subsampled Pathway = []
2018-02-20 11:40:36.217448 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
2018-02-20 11:40:36.217485 >> ~~Weight Initialization~~
2018-02-20 11:40:36.217539 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-02-20 11:40:36.217575 >> ~~Activation Function~~
2018-02-20 11:40:36.217613 >> Activation function to use = prelu
2018-02-20 11:40:36.217659 >> ~~Batch Normalization~~
2018-02-20 11:40:36.217697 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-02-20 11:40:36.217738 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-02-20 11:40:36.217784 >> ========== Done with printing session's parameters ==========
2018-02-20 11:40:36.217818 >> =============================================================
2018-02-20 11:40:36.217869 >> 
=========== Creating the CNN model ===============
2018-02-20 11:40:36.218797 >> ...Building the CNN model...
2018-02-20 11:40:36.219491 >> [Pathway_NORMAL] is being built...
2018-02-20 11:40:36.219604 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-02-20 11:40:36.219681 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-02-20 11:40:36.219746 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-02-20 11:40:36.226330 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-02-20 11:40:36.226421 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 23, 23, 23], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 43, 43, 43]
2018-02-20 11:40:36.263829 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-02-20 11:40:36.263898 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 21, 21, 21], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 41, 41, 41]
2018-02-20 11:40:36.294454 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-02-20 11:40:36.294510 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 19, 19, 19], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 39, 39, 39]
2018-02-20 11:40:36.321794 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-02-20 11:40:36.343060 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-02-20 11:40:36.343111 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 17, 17, 17], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 37, 37, 37]
2018-02-20 11:40:36.367202 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-02-20 11:40:36.367254 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 15, 15, 15], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 35, 35, 35]
2018-02-20 11:40:36.390554 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-02-20 11:40:36.407424 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-02-20 11:40:36.407466 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 33, 33, 33]
2018-02-20 11:40:36.428633 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-02-20 11:40:36.428676 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 11, 11, 11], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 31, 31, 31]
2018-02-20 11:40:36.448573 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-02-20 11:40:36.463124 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 50, 9, 9, 9], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 29, 29, 29]
2018-02-20 11:40:36.463157 >> [Pathway_NORMAL] done.
2018-02-20 11:40:36.463241 >> [Pathway_SUBSAMPLED[3, 3, 3]] is being built...
2018-02-20 11:40:36.463289 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-02-20 11:40:36.463318 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-02-20 11:40:36.463340 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-02-20 11:40:36.464950 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-02-20 11:40:36.464984 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 17, 17, 17], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 24, 24, 24]
2018-02-20 11:40:36.482081 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-02-20 11:40:36.482131 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 15, 15, 15], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 22, 22, 22]
2018-02-20 11:40:36.498576 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-02-20 11:40:36.498610 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 20, 20, 20]
2018-02-20 11:40:36.516069 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-02-20 11:40:36.529337 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-02-20 11:40:36.529385 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 11, 11, 11], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 18, 18, 18]
2018-02-20 11:40:36.546281 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-02-20 11:40:36.546330 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 9, 9, 9], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 16, 16, 16]
2018-02-20 11:40:36.562718 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-02-20 11:40:36.576615 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-02-20 11:40:36.576647 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 7, 7, 7], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 14, 14, 14]
2018-02-20 11:40:36.623220 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-02-20 11:40:36.623291 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 5, 5, 5], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 12, 12, 12]
2018-02-20 11:40:36.640661 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-02-20 11:40:36.653513 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Output's Shape: (Train) [10, 50, 3, 3, 3], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 10, 10, 10]
2018-02-20 11:40:36.653559 >> [Pathway_SUBSAMPLED[3, 3, 3]] done.
2018-02-20 11:40:36.679720 >> DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
2018-02-20 11:40:36.679750 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
2018-02-20 11:40:36.689233 >> [Pathway_FC] is being built...
2018-02-20 11:40:36.689275 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-02-20 11:40:36.689298 >> 	[Conv.Layer_0], Filter Shape: [150, 100, 3, 3, 3]
2018-02-20 11:40:36.689318 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-02-20 11:40:36.718265 >> 	[Conv.Layer_1], Filter Shape: [150, 150, 1, 1, 1]
2018-02-20 11:40:36.718301 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-02-20 11:40:36.737033 >> 	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
2018-02-20 11:40:36.750348 >> 	[Conv.Layer_2], Filter Shape: [2, 150, 1, 1, 1]
2018-02-20 11:40:36.750382 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-02-20 11:40:36.768526 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 2, 9, 9, 9], (Val) [48, 2, 1, 1, 1], (Test) [10, 2, 29, 29, 29]
2018-02-20 11:40:36.768558 >> [Pathway_FC] done.
2018-02-20 11:40:36.768579 >> Adding the final Softmax Target layer...
2018-02-20 11:40:36.772654 >> Finished building the CNN's model.
2018-02-20 11:40:36.772688 >> 
=========== Saving the model ===============
2018-02-20 11:40:36.772749 >> Saving network to: /data/deepmedic/examples/output/cnnModels/deepMedic.initial.2018-02-20.11.40.36.772703.save
2018-02-20 11:40:37.250628 >> Model saved.
2018-02-20 11:40:37.250669 >> =========== Creation of the model: "deepMedic" finished =================
2018-02-23 12:43:12.017952 >> =============================== logger created =======================================
2018-02-23 12:43:12.018007 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-02-23 12:43:12.018029 >> CONFIG: The configuration file for the session was loaded from: /data/deepmedic/examples/configFiles/deepMedic/model/modelConfig.cfg
2018-02-23 12:43:12.019610 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-02-23 12:43:12.019639 >> =============================================================
2018-02-23 12:43:12.019658 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-02-23 12:43:12.019673 >> =============================================================
2018-02-23 12:43:12.019688 >> CNN model's name = deepMedic
2018-02-23 12:43:12.019703 >> Main output folder = /data/deepmedic/examples/output
2018-02-23 12:43:12.019719 >> Path and filename to save model = /data/deepmedic/examples/output/cnnModels/deepMedic
2018-02-23 12:43:12.019734 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-02-23 12:43:12.019748 >> Number of Classes (including background) = 5
2018-02-23 12:43:12.019763 >> ~~Normal Pathway~~
2018-02-23 12:43:12.019778 >> Number of Input Channels = 2
2018-02-23 12:43:12.019794 >> Number of Layers = 8
2018-02-23 12:43:12.019813 >> Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
2018-02-23 12:43:12.019834 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-02-23 12:43:12.019851 >> Receptive Field = [17, 17, 17]
2018-02-23 12:43:12.019868 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-02-23 12:43:12.019883 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-23 12:43:12.019903 >> Lower Rank layers will be made of rank = []
2018-02-23 12:43:12.019919 >> ~~Subsampled Pathway~~
2018-02-23 12:43:12.019934 >> Use subsampled Pathway = True
2018-02-23 12:43:12.019949 >> Number of subsampled pathways that will be built = 1
2018-02-23 12:43:12.019979 >> Number of Layers (per sub-pathway) = [8]
2018-02-23 12:43:12.019999 >> Number of Feature Maps per layer (per sub-pathway) = [[30, 30, 40, 40, 40, 40, 50, 50]]
2018-02-23 12:43:12.020023 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-02-23 12:43:12.020039 >> Receptive Field = [17, 17, 17]
2018-02-23 12:43:12.020056 >> Subsampling Factor per dimension (per sub-pathway) = [[3, 3, 3]]
2018-02-23 12:43:12.020071 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-02-23 12:43:12.020086 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-23 12:43:12.020101 >> Lower Rank layers will be made of rank = []
2018-02-23 12:43:12.020115 >> ~~Fully Connected Pathway~~
2018-02-23 12:43:12.020130 >> Number of additional FC layers (Excluding the Classif. Layer) = 2
2018-02-23 12:43:12.020146 >> Number of Feature Maps in the additional FC layers = [150, 150]
2018-02-23 12:43:12.020171 >> Residual connections added at the output of layers (indices from 0) = [1]
2018-02-23 12:43:12.020190 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-23 12:43:12.020209 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
2018-02-23 12:43:12.020228 >> ~~Size Of Image Segments~~
2018-02-23 12:43:12.020244 >> Size of Segments for Training = [25, 25, 25]
2018-02-23 12:43:12.020260 >> Size of Segments for Validation = [17, 17, 17]
2018-02-23 12:43:12.020275 >> Size of Segments for Testing = [45, 45, 45]
2018-02-23 12:43:12.020290 >> ~~Batch Sizes~~
2018-02-23 12:43:12.020308 >> Batch Size for Training = 10
2018-02-23 12:43:12.020323 >> Batch Size for Validation = 48
2018-02-23 12:43:12.020344 >> Batch Size for Testing = 10
2018-02-23 12:43:12.020360 >> ~~Dropout Rates~~
2018-02-23 12:43:12.020376 >> Drop.R. for each layer in Normal Pathway = []
2018-02-23 12:43:12.020398 >> Drop.R. for each layer in Subsampled Pathway = []
2018-02-23 12:43:12.020422 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
2018-02-23 12:43:12.020439 >> ~~Weight Initialization~~
2018-02-23 12:43:12.020459 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-02-23 12:43:12.020474 >> ~~Activation Function~~
2018-02-23 12:43:12.020489 >> Activation function to use = prelu
2018-02-23 12:43:12.020503 >> ~~Batch Normalization~~
2018-02-23 12:43:12.020521 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-02-23 12:43:12.020537 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-02-23 12:43:12.020552 >> ========== Done with printing session's parameters ==========
2018-02-23 12:43:12.020565 >> =============================================================
2018-02-23 12:43:12.020582 >> 
=========== Creating the CNN model ===============
2018-02-23 12:43:12.021022 >> ...Building the CNN model...
2018-02-23 12:43:12.021202 >> [Pathway_NORMAL] is being built...
2018-02-23 12:43:12.021240 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 2, 25, 25, 25], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 45, 45, 45]
2018-02-23 12:43:12.021261 >> 	[Conv.Layer_0], Filter Shape: [30, 2, 3, 3, 3]
2018-02-23 12:43:12.021281 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 2, 25, 25, 25], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 45, 45, 45]
2018-02-23 12:43:12.026610 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-02-23 12:43:12.026644 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 23, 23, 23], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 43, 43, 43]
2018-02-23 12:43:12.052473 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-02-23 12:43:12.052506 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 21, 21, 21], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 41, 41, 41]
2018-02-23 12:43:12.077842 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:43:12.077875 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 19, 19, 19], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 39, 39, 39]
2018-02-23 12:43:12.103100 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-02-23 12:43:12.115681 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:43:12.115715 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 17, 17, 17], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 37, 37, 37]
2018-02-23 12:43:12.141033 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:43:12.141066 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 15, 15, 15], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 35, 35, 35]
2018-02-23 12:43:12.166851 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-02-23 12:43:12.178607 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-02-23 12:43:12.178641 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 33, 33, 33]
2018-02-23 12:43:12.233894 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-02-23 12:43:12.233938 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 11, 11, 11], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 31, 31, 31]
2018-02-23 12:43:12.259914 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-02-23 12:43:12.272211 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 50, 9, 9, 9], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 29, 29, 29]
2018-02-23 12:43:12.272240 >> [Pathway_NORMAL] done.
2018-02-23 12:43:12.272316 >> [Pathway_SUBSAMPLED[3, 3, 3]] is being built...
2018-02-23 12:43:12.272346 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Input's Shape: (Train) [10, 2, 19, 19, 19], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 26, 26, 26]
2018-02-23 12:43:12.272378 >> 	[Conv.Layer_0], Filter Shape: [30, 2, 3, 3, 3]
2018-02-23 12:43:12.272407 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 2, 19, 19, 19], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 26, 26, 26]
2018-02-23 12:43:12.275806 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-02-23 12:43:12.275840 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 17, 17, 17], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 24, 24, 24]
2018-02-23 12:43:12.300236 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-02-23 12:43:12.300274 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 15, 15, 15], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 22, 22, 22]
2018-02-23 12:43:12.325418 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:43:12.325467 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 20, 20, 20]
2018-02-23 12:43:12.350617 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-02-23 12:43:12.362940 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:43:12.362975 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 11, 11, 11], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 18, 18, 18]
2018-02-23 12:43:12.388137 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:43:12.388170 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 9, 9, 9], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 16, 16, 16]
2018-02-23 12:43:12.413813 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-02-23 12:43:12.425568 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-02-23 12:43:12.425602 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 7, 7, 7], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 14, 14, 14]
2018-02-23 12:43:12.451306 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-02-23 12:43:12.451354 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 5, 5, 5], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 12, 12, 12]
2018-02-23 12:43:12.477146 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-02-23 12:43:12.488614 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Output's Shape: (Train) [10, 50, 3, 3, 3], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 10, 10, 10]
2018-02-23 12:43:12.488646 >> [Pathway_SUBSAMPLED[3, 3, 3]] done.
2018-02-23 12:43:12.517328 >> DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
2018-02-23 12:43:12.517358 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
2018-02-23 12:43:12.525998 >> [Pathway_FC] is being built...
2018-02-23 12:43:12.526054 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-02-23 12:43:12.526077 >> 	[Conv.Layer_0], Filter Shape: [150, 100, 3, 3, 3]
2018-02-23 12:43:12.526096 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-02-23 12:43:12.565147 >> 	[Conv.Layer_1], Filter Shape: [150, 150, 1, 1, 1]
2018-02-23 12:43:12.565199 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-02-23 12:43:12.592959 >> 	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
2018-02-23 12:43:12.604652 >> 	[Conv.Layer_2], Filter Shape: [5, 150, 1, 1, 1]
2018-02-23 12:43:12.604715 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-02-23 12:43:12.630573 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 5, 9, 9, 9], (Val) [48, 5, 1, 1, 1], (Test) [10, 5, 29, 29, 29]
2018-02-23 12:43:12.630601 >> [Pathway_FC] done.
2018-02-23 12:43:12.630637 >> Adding the final Softmax Target layer...
2018-02-23 12:43:12.637291 >> Finished building the CNN's model.
2018-02-23 12:43:12.637343 >> 
=========== Saving the model ===============
2018-02-23 12:43:12.637398 >> Saving network to: /data/deepmedic/examples/output/cnnModels/deepMedic.initial.2018-02-23.12.43.12.637364.save
2018-02-23 12:43:13.282768 >> Model saved.
2018-02-23 12:43:13.282819 >> =========== Creation of the model: "deepMedic" finished =================
2018-02-23 12:51:58.712501 >> =============================== logger created =======================================
2018-02-23 12:51:58.712553 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-02-23 12:51:58.712579 >> CONFIG: The configuration file for the session was loaded from: /data/deepmedic/examples/configFiles/configSkullStripping/model/modelConfig.cfg
2018-02-23 12:51:58.712692 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-02-23 12:51:58.712721 >> =============================================================
2018-02-23 12:51:58.712747 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-02-23 12:51:58.712769 >> =============================================================
2018-02-23 12:51:58.712791 >> CNN model's name = deepMedic
2018-02-23 12:51:58.712813 >> Main output folder = /data/deepmedic/examples/output
2018-02-23 12:51:58.712835 >> Path and filename to save model = /data/deepmedic/examples/output/cnnModels/deepMedic
2018-02-23 12:51:58.712857 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-02-23 12:51:58.712881 >> Number of Classes (including background) = 2
2018-02-23 12:51:58.712900 >> ~~Normal Pathway~~
2018-02-23 12:51:58.712924 >> Number of Input Channels = 1
2018-02-23 12:51:58.712945 >> Number of Layers = 8
2018-02-23 12:51:58.712971 >> Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
2018-02-23 12:51:58.713000 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-02-23 12:51:58.713023 >> Receptive Field = [17, 17, 17]
2018-02-23 12:51:58.713045 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-02-23 12:51:58.713079 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-23 12:51:58.713098 >> Lower Rank layers will be made of rank = []
2018-02-23 12:51:58.713119 >> ~~Subsampled Pathway~~
2018-02-23 12:51:58.713140 >> Use subsampled Pathway = True
2018-02-23 12:51:58.713163 >> Number of subsampled pathways that will be built = 1
2018-02-23 12:51:58.713187 >> Number of Layers (per sub-pathway) = [8]
2018-02-23 12:51:58.713211 >> Number of Feature Maps per layer (per sub-pathway) = [[30, 30, 40, 40, 40, 40, 50, 50]]
2018-02-23 12:51:58.713237 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-02-23 12:51:58.713259 >> Receptive Field = [17, 17, 17]
2018-02-23 12:51:58.713282 >> Subsampling Factor per dimension (per sub-pathway) = [[3, 3, 3]]
2018-02-23 12:51:58.713305 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-02-23 12:51:58.713327 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-23 12:51:58.713350 >> Lower Rank layers will be made of rank = []
2018-02-23 12:51:58.713370 >> ~~Fully Connected Pathway~~
2018-02-23 12:51:58.713392 >> Number of additional FC layers (Excluding the Classif. Layer) = 2
2018-02-23 12:51:58.713414 >> Number of Feature Maps in the additional FC layers = [150, 150]
2018-02-23 12:51:58.713437 >> Residual connections added at the output of layers (indices from 0) = [1]
2018-02-23 12:51:58.713459 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-02-23 12:51:58.713483 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
2018-02-23 12:51:58.713504 >> ~~Size Of Image Segments~~
2018-02-23 12:51:58.713525 >> Size of Segments for Training = [25, 25, 25]
2018-02-23 12:51:58.713547 >> Size of Segments for Validation = [17, 17, 17]
2018-02-23 12:51:58.713569 >> Size of Segments for Testing = [45, 45, 45]
2018-02-23 12:51:58.713597 >> ~~Batch Sizes~~
2018-02-23 12:51:58.713618 >> Batch Size for Training = 10
2018-02-23 12:51:58.713640 >> Batch Size for Validation = 48
2018-02-23 12:51:58.713661 >> Batch Size for Testing = 10
2018-02-23 12:51:58.713682 >> ~~Dropout Rates~~
2018-02-23 12:51:58.713705 >> Drop.R. for each layer in Normal Pathway = []
2018-02-23 12:51:58.713725 >> Drop.R. for each layer in Subsampled Pathway = []
2018-02-23 12:51:58.713755 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
2018-02-23 12:51:58.713777 >> ~~Weight Initialization~~
2018-02-23 12:51:58.713800 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-02-23 12:51:58.713822 >> ~~Activation Function~~
2018-02-23 12:51:58.713843 >> Activation function to use = prelu
2018-02-23 12:51:58.713864 >> ~~Batch Normalization~~
2018-02-23 12:51:58.713887 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-02-23 12:51:58.713909 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-02-23 12:51:58.713929 >> ========== Done with printing session's parameters ==========
2018-02-23 12:51:58.713950 >> =============================================================
2018-02-23 12:51:58.713974 >> 
=========== Creating the CNN model ===============
2018-02-23 12:51:58.714405 >> ...Building the CNN model...
2018-02-23 12:51:58.714595 >> [Pathway_NORMAL] is being built...
2018-02-23 12:51:58.714638 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-02-23 12:51:58.714669 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-02-23 12:51:58.714696 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 45, 45, 45]
2018-02-23 12:51:58.720006 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-02-23 12:51:58.720043 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 23, 23, 23], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 43, 43, 43]
2018-02-23 12:51:58.747827 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-02-23 12:51:58.747865 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 21, 21, 21], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 41, 41, 41]
2018-02-23 12:51:58.773271 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:51:58.773314 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 19, 19, 19], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 39, 39, 39]
2018-02-23 12:51:58.799174 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-02-23 12:51:58.811488 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:51:58.811530 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 17, 17, 17], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 37, 37, 37]
2018-02-23 12:51:58.837198 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:51:58.837249 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 15, 15, 15], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 35, 35, 35]
2018-02-23 12:51:58.862580 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-02-23 12:51:58.875310 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-02-23 12:51:58.875352 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 33, 33, 33]
2018-02-23 12:51:58.901112 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-02-23 12:51:58.901167 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 11, 11, 11], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 31, 31, 31]
2018-02-23 12:51:58.928295 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-02-23 12:51:58.940259 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 50, 9, 9, 9], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 29, 29, 29]
2018-02-23 12:51:58.940307 >> [Pathway_NORMAL] done.
2018-02-23 12:51:58.940407 >> [Pathway_SUBSAMPLED[3, 3, 3]] is being built...
2018-02-23 12:51:58.940451 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-02-23 12:51:58.940482 >> 	[Conv.Layer_0], Filter Shape: [30, 1, 3, 3, 3]
2018-02-23 12:51:58.940509 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 19, 19, 19], (Val) [48, 1, 17, 17, 17], (Test) [10, 1, 26, 26, 26]
2018-02-23 12:51:58.943970 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-02-23 12:51:58.944019 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 17, 17, 17], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 24, 24, 24]
2018-02-23 12:51:58.969640 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-02-23 12:51:58.969683 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 15, 15, 15], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 22, 22, 22]
2018-02-23 12:51:58.994735 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:51:58.994800 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 20, 20, 20]
2018-02-23 12:51:59.021179 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-02-23 12:51:59.033249 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:51:59.033284 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 11, 11, 11], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 18, 18, 18]
2018-02-23 12:51:59.058588 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-02-23 12:51:59.058622 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 9, 9, 9], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 16, 16, 16]
2018-02-23 12:51:59.084585 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-02-23 12:51:59.096702 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-02-23 12:51:59.096751 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 7, 7, 7], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 14, 14, 14]
2018-02-23 12:51:59.122362 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-02-23 12:51:59.122410 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 5, 5, 5], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 12, 12, 12]
2018-02-23 12:51:59.148255 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-02-23 12:51:59.210872 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Output's Shape: (Train) [10, 50, 3, 3, 3], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 10, 10, 10]
2018-02-23 12:51:59.210920 >> [Pathway_SUBSAMPLED[3, 3, 3]] done.
2018-02-23 12:51:59.239866 >> DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
2018-02-23 12:51:59.239898 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
2018-02-23 12:51:59.248961 >> [Pathway_FC] is being built...
2018-02-23 12:51:59.249019 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-02-23 12:51:59.249045 >> 	[Conv.Layer_0], Filter Shape: [150, 100, 3, 3, 3]
2018-02-23 12:51:59.249066 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-02-23 12:51:59.287670 >> 	[Conv.Layer_1], Filter Shape: [150, 150, 1, 1, 1]
2018-02-23 12:51:59.287722 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-02-23 12:51:59.315505 >> 	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
2018-02-23 12:51:59.327360 >> 	[Conv.Layer_2], Filter Shape: [2, 150, 1, 1, 1]
2018-02-23 12:51:59.327409 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-02-23 12:51:59.353784 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 2, 9, 9, 9], (Val) [48, 2, 1, 1, 1], (Test) [10, 2, 29, 29, 29]
2018-02-23 12:51:59.353810 >> [Pathway_FC] done.
2018-02-23 12:51:59.353854 >> Adding the final Softmax Target layer...
2018-02-23 12:51:59.359821 >> Finished building the CNN's model.
2018-02-23 12:51:59.359870 >> 
=========== Saving the model ===============
2018-02-23 12:51:59.359919 >> Saving network to: /data/deepmedic/examples/output/cnnModels/deepMedic.initial.2018-02-23.12.51.59.359885.save
2018-02-23 12:51:59.919935 >> Model saved.
2018-02-23 12:51:59.919994 >> =========== Creation of the model: "deepMedic" finished =================
